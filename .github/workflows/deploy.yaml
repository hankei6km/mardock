name: deplpoy
on:
  push:
    branches:
      - main
  repository_dispatch:
    # types: [opened, deleted]

jobs:

  deploy:
    runs-on: ubuntu-latest
    environment: pages
    # repository_dispatch しか使えないならいらない?
    # if: github.ref == 'refs/heads/main'

    steps:
    - run: echo "${{ github.event.action }}"
    - uses: actions/checkout@v2

    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
         node-version: 14.x

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    # https://docs.github.com/ja/free-pro-team@latest/actions/guides/caching-dependencies-to-speed-up-workflows
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    # https://err.sh/next.js/no-cache
    - name: Cache next build
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}

    # mardock の build キャッシュ.
    # key と restore-key の階層を一致させないことで毎回キャッシュを更新させる.
    # (内容が変化しないときも更新がかかるので効率がわるい).
    - name: Cache mardock build
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/.mardock/cache
        key: ${{ runner.os }}-mardock-build-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-mardock-build-

    - name: Install modules
      run: yarn install && yarn licenses:build 

    # https://qiita.com/developer-kikikaikai/items/198d75efd10eb525c41f
    - name: Install japanese fonts
      run: sudo apt-get update && sudo apt-get install fonts-noto-cjk

    # https://qiita.com/ozaki25/items/fe9912fc41c3a5c5bfea
    # https://qiita.com/manten120/items/87e9e822800403904dc8
    - name: Build
      run: yarn build
      env:
        API_BASE_URL: ${{ secrets.API_BASE_URL }}
        GET_API_KEY: ${{ secrets.GET_API_KEY }}
        # API route は動作しない
        # PREVIEW_SECRET: ${{ secrets.GITHUB_TOKEN }}

    - name: Export
      run: yarn export

    - name: Add nojekyll
      run: touch ./out/.nojekyll

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./out
        publish_branch: gh-pages

  push_to_ghcr:

    needs: deploy
    name: Push mardock image to GitHub Container Registry(temporary)
    if: "startsWith(github.ref, 'refs/heads/')"
    runs-on: ubuntu-latest
    environment: pages-staging
    steps:
      - id: prep
        run: |
          TAG1="ghcr.io/${GITHUB_REPOSITORY}:$(date "+%Y-%m")-temp"
          echo "::set-output name=tags::${TAG1}"

      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Copy files to docker
        run: cp -r package.json yarn.lock LICENSE scripts docker/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          context: ./docker
          # file : ./docker/Dockerfile
          build-args: |
            NO_CACHE_CLONE=${{ github.sha }}
            BRANCH=${{ github.ref }}
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Cache builder stage
        uses: docker/build-push-action@v2
        with:
          context: ./docker
          build-args: |
            NO_CACHE_CLONE=${{ github.sha }}
            BRANCH=${{ github.ref }}
          target: builder
          tags: builder_stage
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
