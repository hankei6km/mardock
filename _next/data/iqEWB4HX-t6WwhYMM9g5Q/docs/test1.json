{"pageProps":{"pageData":{"id":"test1","updated":"2021-05-12T10:31:18.971Z","title":"テスト 1","pageNo":1,"pageCount":-1,"allCategory":[],"category":[{"id":"document","createdAt":"2021-03-16T18:04:40.966Z","updatedAt":"2021-03-16T18:04:40.966Z","publishedAt":"2021-03-16T18:04:40.966Z","revisedAt":"2021-03-16T18:04:40.966Z","title":"ドキュメント","description":"カテゴリーページ: ドキュメントが投稿されるページ。"}],"curCategory":"","articleTitle":"テスト 1","htmlToc":{"items":[{"label":"見出しのテスト-1","items":[],"depth":1,"id":"見出しのテスト-1"},{"label":"見出しのテスト-2","items":[{"label":"見出しのテスト-2-1","items":[],"depth":2,"id":"見出しのテスト-2-1"},{"label":"見出しのテスト-2-2","items":[],"depth":2,"id":"見出しのテスト-2-2"}],"depth":1,"id":"見出しのテスト-2"},{"label":"パラグラフのテスト","items":[],"depth":1,"id":"パラグラフのテスト"},{"label":"画像","items":[],"depth":1,"id":"画像"},{"label":"引用","items":[],"depth":1,"id":"引用"},{"label":"テーブル","items":[],"depth":1,"id":"テーブル"},{"label":"コードブロック","items":[],"depth":1,"id":"コードブロック"},{"label":"埋め込み","items":[],"depth":1,"id":"埋め込み"},{"label":"所感","items":[],"depth":1,"id":"所感"}]},"html":"<p>本文の入力はリッチエディタに戻した。ただし、HTML は CodeDock で拡張してある。以下、そのテスト。</p><h3 id=\"見出しのテスト-1\">見出しのテスト 1</h3><p>どうかな？</p><h3 id=\"見出しのテスト-2\">見出しのテスト 2</h3><p>いちおう動作するもよう。</p><h4 id=\"見出しのテスト-2-1\">見出しのテスト 2-1</h4><p>これは？</p><h4 id=\"見出しのテスト-2-2\">見出しのテスト 2-2</h4><p>どうかな？</p><h3 id=\"パラグラフのテスト\">パラグラフのテスト</h3><p>改行を複数入れてある。</p><p>ここまで。</p><ul><li>改行も除去されるかな</li><li>項目 2</li></ul><p>リストの前後に空行が入っている。</p><h3 id=\"画像\">画像</h3><p>画像のテスト。</p><p><img src=\"https://images.microcms-assets.io/assets/cc433627f35c4232b7cb97e0376507a7/5ef0a57369f6474e8e05c6a66837ac24/2021-03-28-ev-car-sony1.jpg?w=600&amp;h=300\" alt=\"ev car\" width=\"600\" height=\"300\"></p><h3 id=\"引用\">引用</h3><p>どうかな？</p><blockquote><p>引用も普通に使えるはずだが。</p></blockquote><p>使えた。</p><h3 id=\"テーブル\">テーブル</h3><p>簡単なテーブルを記述してみる。</p><table><thead><tr><th align=\"left\">項目 1</th><th align=\"right\">項目 2</th><th align=\"right\">項目 3</th></tr></thead><tbody><tr><td align=\"left\">abcabcabc</td><td align=\"right\">&nbsp;1000</td><td align=\"right\">70</td></tr><tr><td align=\"left\">ABCABCABC</td><td align=\"right\">&nbsp;500</td><td align=\"right\">1000</td></tr><tr><td align=\"left\">あいうえお</td><td align=\"right\">2200</td><td align=\"right\">90</td></tr></tbody></table><p>普通にテキストフィールドで markdown 記述してもそうだけど、コードブロック内でテーブルを編集するのはちょっと面倒。</p><h3 id=\"コードブロック\">コードブロック</h3><p>CodeDock による言語指定あり。</p><pre><code class=\"hljs language-typescript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">normalizeProcessor</span>(<span class=\"hljs-params\">processor: Processor</span>): <span class=\"hljs-title\">FrozenProcessor</span> </span>{\n&nbsp; <span class=\"hljs-keyword\">return</span> processor\n&nbsp; &nbsp; .use(rehypeMinifyWhitespace)\n&nbsp; &nbsp; .use(rehypeSanitize, (schema <span class=\"hljs-keyword\">as</span> unknown) <span class=\"hljs-keyword\">as</span> Schema)\n&nbsp; &nbsp; .use(rehypeStringify)\n&nbsp; &nbsp; .freeze();\n}\n\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">async</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">normalizedHtml</span>(<span class=\"hljs-params\">\n&nbsp; processor: Processor,\n&nbsp; html: <span class=\"hljs-built_in\">string</span>\n</span>): <span class=\"hljs-title\">Promise</span>&lt;<span class=\"hljs-title\">string</span>&gt; </span>{\n&nbsp; <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">await</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> {\n&nbsp; &nbsp; normalizeProcessor(processor).process(html, <span class=\"hljs-function\">(<span class=\"hljs-params\">err, file</span>) =&gt;</span> {\n&nbsp; &nbsp; &nbsp; <span class=\"hljs-keyword\">if</span> (err) {\n&nbsp; &nbsp; &nbsp; &nbsp; <span class=\"hljs-built_in\">console</span>.error(err);\n&nbsp; &nbsp; &nbsp; &nbsp; reject(err);\n&nbsp; &nbsp; &nbsp; }\n&nbsp; &nbsp; &nbsp; resolve(<span class=\"hljs-built_in\">String</span>(file));\n&nbsp; &nbsp; });\n&nbsp; });\n}</code></pre><h3 id=\"埋め込み\">埋め込み</h3><p>リッチエディタでの埋め込みは markdown への変換ところで動作しないんじゃないかなと。</p><p>というわけで、CodeDock で試してみる。いちおう動いてるもよう。</p><div class=\"embed\"><iframe height=\"529\" style=\"width: 100%;\" scrolling=\"no\" title=\"marp exported\" src=\"https://codepen.io/hankei6km/embed/zYobwJy?height=529&amp;theme-id=light&amp;default-tab=result\" loading=\"lazy\">  See the Pen &#x3C;a href='https://codepen.io/hankei6km/pen/zYobwJy'>marp exported&#x3C;/a> by hankei6km   (&#x3C;a href='https://codepen.io/hankei6km'>@hankei6km&#x3C;/a>) on &#x3C;a href='https://codepen.io'>CodePen&#x3C;/a>.</iframe></div><h3 id=\"所感\">所感</h3><p>とりあえずは想定していた通りに動作する。</p><ul><li><p>テーブルは普通にいける</p></li><li><p>コードのシンタックスハイライトは Markdown 内部からさらにコードブロック</p><ul><li>記述が増えるが言語指定が可能になる</li></ul></li><li><p>埋め込み(<code>iframe</code>)が使えるのはちょっと意外だった</p></li><li><p>コードブロックが末尾にあると改行のみでブロック解除にならないのが面倒</p></li><li><p>draftlint も動作する</p></li><li><p>画像の alt は忘れがちになる(draftlint でどうにかする？)</p><ul><li>Marp スライドでサイズや <code>bg</code> 指定していたら慣れた</li></ul></li><li><p>リストをネストすると<code>&lt;li&gt;</code>の中に<code>&lt;p&gt;</code> が入る(どこで入る？)</p></li></ul><p>ということで、微調整しながら利用する予定。</p>","deck":{"slide":{"id":"","minX":0,"minY":0,"width":0,"height":0,"items":[],"css":"","script":[],"source":"","meta":{}},"overview":{"id":"","minX":0,"minY":0,"width":0,"height":0,"items":[],"css":"","script":[],"source":"","meta":{}},"hash":"9ae0b35999ae89826d0557231180e105f0e1f573d65aac9ef41336329590812d"},"mainVisual":{"url":"https://images.microcms-assets.io/assets/cc433627f35c4232b7cb97e0376507a7/eb84db7f1a7a4409bd20ffc27abe60e4/mardock-temp-image.png","width":1280,"height":720},"description":"","meta":{"title":"テスト 1","link":"https://hankei6km.github.io/mardock/docs/test1","updated":"2021-05-12T10:31:18.971Z","keyword":[],"image":"https://images.microcms-assets.io/assets/cc433627f35c4232b7cb97e0376507a7/eb84db7f1a7a4409bd20ffc27abe60e4/mardock-temp-image.png","description":""},"feedUrl":"https://hankei6km.github.io/mardock/assets/feeds/deck.xml"},"items":{"contents":[{"id":"test2","updated":"2021-05-12T10:36:25.162Z","title":"テスト 2","category":[],"articleTitle":"テスト 2","deck":{"id":"","minX":0,"minY":0,"width":0,"height":0,"items":[],"css":"","script":[],"source":"","meta":{}},"mainVisual":{"url":"https://images.microcms-assets.io/assets/cc433627f35c4232b7cb97e0376507a7/eb84db7f1a7a4409bd20ffc27abe60e4/mardock-temp-image.png","width":1280,"height":720},"description":"","meta":{"title":"テスト 2","link":"https://hankei6km.github.io/mardock/docs/test2","updated":"2021-05-12T10:36:25.162Z","keyword":[],"image":"https://images.microcms-assets.io/assets/cc433627f35c4232b7cb97e0376507a7/eb84db7f1a7a4409bd20ffc27abe60e4/mardock-temp-image.png","description":""}},{"id":"test1","updated":"2021-05-12T10:31:18.971Z","title":"テスト 1","category":[{"id":"document","createdAt":"2021-03-16T18:04:40.966Z","updatedAt":"2021-03-16T18:04:40.966Z","publishedAt":"2021-03-16T18:04:40.966Z","revisedAt":"2021-03-16T18:04:40.966Z","title":"ドキュメント","description":"カテゴリーページ: ドキュメントが投稿されるページ。"}],"articleTitle":"テスト 1","deck":{"id":"","minX":0,"minY":0,"width":0,"height":0,"items":[],"css":"","script":[],"source":"","meta":{}},"mainVisual":{"url":"https://images.microcms-assets.io/assets/cc433627f35c4232b7cb97e0376507a7/eb84db7f1a7a4409bd20ffc27abe60e4/mardock-temp-image.png","width":1280,"height":720},"description":"","meta":{"title":"テスト 1","link":"https://hankei6km.github.io/mardock/docs/test1","updated":"2021-05-12T10:31:18.971Z","keyword":[],"image":"https://images.microcms-assets.io/assets/cc433627f35c4232b7cb97e0376507a7/eb84db7f1a7a4409bd20ffc27abe60e4/mardock-temp-image.png","description":""}}],"totalCount":2,"offset":0,"limit":10}},"__N_SSG":true}